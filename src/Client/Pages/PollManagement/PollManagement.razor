@page "/poll-management"
@attribute [Authorize(Policy = Permissions.Brands.View)]
@inject Microsoft.Extensions.Localization.IStringLocalizer<Brands> _localizer
@using VoteApp.Application.Features.PollQuestions.Queries.GetAll;
@using VoteApp.Application.Features.Polls.Queries.GetAllPollsByQuestionId;

<style>
    .mud-table-container {
        overflow: auto;
    }
</style>

<HeroTitle Title="@_localizer["Poll questions"]" Description="@_localizer["Manage poll questions."]" />
@if (!_loaded)
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
}
else
{
<MudTable Hover="true" Elevation="25" Items="_pollQuestionList" Dense="@_dense" Bordered="@_bordered" Striped="@_striped" Filter="new Func<GetAllPollQuestionsResponse, bool>(Search)" @bind-pollQuestion="_pollQuestion" OnRowClick="OnSelectedQuestion" T="GetAllPollQuestionsResponse">
    <ToolBarContent>
        <div class="justify-center mud-text-align-center">
            @if (_canCreateBrands)
            {
                <MudButton DisableElevation Variant="Variant.Filled" Color="Color.Primary" OnClick="(() => InvokeQuestionModal())" StartIcon="@Icons.Material.Filled.Add" IconColor="Color.Surface">@_localizer["Create"]</MudButton>
                <MudButton DisableElevation Variant="Variant.Filled" OnClick="GetPollQuestionsAsync" StartIcon="@Icons.Material.Filled.Refresh" IconColor="Color.Surface" Color="Color.Secondary">@_localizer["Reload"]</MudButton>
            }
            else
            {
                <MudButton DisableElevation Variant="Variant.Filled" OnClick="GetPollQuestionsAsync" StartIcon="@Icons.Material.Filled.Refresh" IconColor="Color.Surface" Color="Color.Secondary">@_localizer["Reload"]</MudButton>
            }
        </div>
        <MudToolBarSpacer />
        @if (_canSearchBrands)
        {
            <MudTextField @bind-Value="_searchString" Immediate="true" Placeholder="@_localizer["Search for Brands"]" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0 mb-3"></MudTextField>
        }
    </ToolBarContent>
    <HeaderContent>
        <MudTh><MudTableSortLabel SortBy="new Func<GetAllPollQuestionsResponse, object>(x => x.Id)">@_localizer["Id"]</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<GetAllPollQuestionsResponse, object>(x => x.Title)">@_localizer["Title"]</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<GetAllPollQuestionsResponse, object>(x => x.Question)">@_localizer["Question"]</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<GetAllPollQuestionsResponse, object>(x => x.RedAnswer)">@_localizer["Red answer"]</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<GetAllPollQuestionsResponse, object>(x => x.GreenAnswer)">@_localizer["Green answer"]</MudTableSortLabel></MudTh>
        <MudTh Style="text-align:right">@_localizer["Actions"]</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.Id</MudTd>
        <MudTd DataLabel="Title">
            <MudHighlighter Text="@context.Title" HighlightedText="@_searchString" />
        </MudTd>
        <MudTd DataLabel="Question">@context.Question</MudTd>
        <MudTd DataLabel="RedAnswer">@context.RedAnswer</MudTd>
        <MudTd DataLabel="GreenAnswer">@context.GreenAnswer</MudTd>
        <MudTd DataLabel="Actions" Style="text-align: right"><MudButton DisableElevation Variant="Variant.Filled" Color="Color.Secondary" OnClick="(() => InvokePollModal(context.Id))">Start new poll</MudButton></MudTd>
    </RowTemplate>
    <ChildRowContent>

        @if (_selectedQuestion != null)
        {

            @if (context.Id == _selectedQuestion.Id)
            {
        <MudTr>
            <td colspan="6">
                <MudCard Elevation="0">
                    <MudCardContent Class="pa-0">
                        <MudTable Items="@_pollsForSelectedQuestion" Context="PollResultContext" Hover="true" Breakpoint="Breakpoint.Sm" Elevation="1" OnRowClick="OnSelectedPoll" T="GetAllPollsByQuestionIdResponse">
                            <HeaderContent>
                                <MudTh>Started</MudTh>
                                <MudTh>Stopped</MudTh>
                                <MudTh>Green votes</MudTh>
                                <MudTh>Red votes</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd DataLabel="Started">@PollResultContext.Started</MudTd>
                                <MudTd DataLabel="Stopped">@PollResultContext.Stopped</MudTd>
                                <MudTd DataLabel="Green votes">@PollResultContext.GreenVotes</MudTd>
                                <MudTd DataLabel="Red votes">@PollResultContext.RedVotes</MudTd>
                            </RowTemplate>
                        </MudTable>
                    </MudCardContent>
                </MudCard>
                </td>
        </MudTr>
            }






        }

    </ChildRowContent>
    <PagerContent>
        <TablePager />
    </PagerContent>
</MudTable>
}